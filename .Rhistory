(Latin America & Caribbean (excluding high income))|(Latin America & the Caribbean (IDA & IBRD countries))|
(Least developed countries: UN classification)|(Low & middle income)|(Low income)|(Lower middle income)|
(Middle East & North Africa)|(Middle East & North Africa (excluding high income))|(Middle East & North Africa (IDA & IBRD countries))|
(Middle income)|(Not classified)|(OECD members)|(Other small states)|(Post-demographic dividend)|(Pre-demographic dividend)|
(South Asia)|(South Asia (IDA & IBRD))|(Sub-Saharan Africa)|(Sub-Saharan Africa (excluding high income))|
(Sub-Saharan Africa (IDA & IBRD countries))|(Upper middle income)")) %>%
arrange(desc(recent_percent_increase)) %>% %>% select(country == "Vietnam")
emissions_longer %>%
filter(year >= 2000) %>%
mutate(country = as.factor(country)) %>%
filter(!str_detect(country, pattern = "(Africa Eastern and Southern)|(Africa Western and Central)|
(Central Europe and the Baltics)|(Early-demographic dividend)|(Early-demographic dividend)|
(East Asia & Pacific)|(East Asia & Pacific (excluding high income))|(East Asia & Pacific (IDA & IBRD countries))|
(Euro area)|(Europe & Central Asia)|(Europe & Central Asia (excluding high income))|(Europe & Central Asia (IDA & IBRD countries))|
(European Union)|(Fragile and conflict affected situations)|(Heavily indebted poor countries (HIPC))|(High income)|
(IBRD only)|(IDA blend)|(IDA only)|(IDA total)|(Late-demographic dividend)|(Latin America & Caribbean)|
(Latin America & Caribbean (excluding high income))|(Latin America & the Caribbean (IDA & IBRD countries))|
(Least developed countries: UN classification)|(Low & middle income)|(Low income)|(Lower middle income)|
(Middle East & North Africa)|(Middle East & North Africa (excluding high income))|(Middle East & North Africa (IDA & IBRD countries))|
(Middle income)|(Not classified)|(OECD members)|(Other small states)|(Post-demographic dividend)|(Pre-demographic dividend)|
(South Asia)|(South Asia (IDA & IBRD))|(Sub-Saharan Africa)|(Sub-Saharan Africa (excluding high income))|
(Sub-Saharan Africa (IDA & IBRD countries))|(Upper middle income)")) %>%
arrange(desc(recent_percent_increase)) %>% select(country == "Vietnam")
emissions_longer %>%
filter(year >= 2000) %>%
mutate(country = as.factor(country)) %>%
filter(!str_detect(country, pattern = "(Africa Eastern and Southern)|(Africa Western and Central)|
(Central Europe and the Baltics)|(Early-demographic dividend)|(Early-demographic dividend)|
(East Asia & Pacific)|(East Asia & Pacific (excluding high income))|(East Asia & Pacific (IDA & IBRD countries))|
(Euro area)|(Europe & Central Asia)|(Europe & Central Asia (excluding high income))|(Europe & Central Asia (IDA & IBRD countries))|
(European Union)|(Fragile and conflict affected situations)|(Heavily indebted poor countries (HIPC))|(High income)|
(IBRD only)|(IDA blend)|(IDA only)|(IDA total)|(Late-demographic dividend)|(Latin America & Caribbean)|
(Latin America & Caribbean (excluding high income))|(Latin America & the Caribbean (IDA & IBRD countries))|
(Least developed countries: UN classification)|(Low & middle income)|(Low income)|(Lower middle income)|
(Middle East & North Africa)|(Middle East & North Africa (excluding high income))|(Middle East & North Africa (IDA & IBRD countries))|
(Middle income)|(Not classified)|(OECD members)|(Other small states)|(Post-demographic dividend)|(Pre-demographic dividend)|
(South Asia)|(South Asia (IDA & IBRD))|(Sub-Saharan Africa)|(Sub-Saharan Africa (excluding high income))|
(Sub-Saharan Africa (IDA & IBRD countries))|(Upper middle income)")) %>%
arrange(desc(recent_percent_increase)) %>%
distinct(country, .keep_all =T)
emissions_longer %>%
filter(year >= 2000) %>%
filter(country %in% largest_inc #| country %in% largest_dec
) %>%
ggplot(aes(x = year,
y = metric_tons_pcapita,
group = country,
color = country)) +
geom_line() +
facet_wrap(~country) +
theme_minimal() +
theme(#legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1, size = 6),
plot.title = element_text(hjust = 0.5)) +
labs(title= "Countries with Largest Percent Increase in\nMetric Tons of CO2 Per Capital from 2000 to 2018",
y = "Metric Tons of CO2 Per Capita",
y = "Year",
color = "Country")
emissions_longer %>%
filter(year >= 2000) %>%
mutate(country = as.factor(country)) %>%
filter(!str_detect(country, pattern = "(Africa Eastern and Southern)|(Africa Western and Central)|
(Central Europe and the Baltics)|(Early-demographic dividend)|(Early-demographic dividend)|
(East Asia & Pacific)|(East Asia & Pacific (excluding high income))|(East Asia & Pacific (IDA & IBRD countries))|
(Euro area)|(Europe & Central Asia)|(Europe & Central Asia (excluding high income))|(Europe & Central Asia (IDA & IBRD countries))|
(European Union)|(Fragile and conflict affected situations)|(Heavily indebted poor countries (HIPC))|(High income)|
(IBRD only)|(IDA blend)|(IDA only)|(IDA total)|(Late-demographic dividend)|(Latin America & Caribbean)|
(Latin America & Caribbean (excluding high income))|(Latin America & the Caribbean (IDA & IBRD countries))|
(Least developed countries: UN classification)|(Low & middle income)|(Low income)|(Lower middle income)|
(Middle East & North Africa)|(Middle East & North Africa (excluding high income))|(Middle East & North Africa (IDA & IBRD countries))|
(Middle income)|(Not classified)|(OECD members)|(Other small states)|(Post-demographic dividend)|(Pre-demographic dividend)|
(South Asia)|(South Asia (IDA & IBRD))|(Sub-Saharan Africa)|(Sub-Saharan Africa (excluding high income))|
(Sub-Saharan Africa (IDA & IBRD countries))|(Upper middle income)")) %>%
arrange(recent_percent_increase) %>%
distinct(country, .keep_all =T)
usethis::use_github()
usethis::use_git_config(user.name = "Ben Sunshine", user.email = "bsunshine25@gmail.com")
usethis::create_github_token()
gitcreds::gitcreds_set()
wine <- read_csv('/Users/bensunshine/Documents/SLU_Senior_Year/SP24/data_334/ds334blog/data/winequality-red.csv')
library(tidyverse)
library(broom)
wine <- read_csv('/Users/bensunshine/Documents/SLU_Senior_Year/SP24/data_334/ds334blog/data/winequality-red.csv')
library(tidyverse)
library(broom)
wine <- read_csv('/Users/bensunshine/Documents/SLU_Senior_Year/SP24/data_334/ds334blog/data/winequality-red.csv')
View(wine)
ggcorr(data = wine |> dplyr::select(-quality)
ggcorr(data = wine |> dplyr::select(-quality))
GGally::ggcorr(data = wine |> dplyr::select(-quality))
?ggpairs
library(GGally)
ggpairs(data = wine %>% select(-quality))
ggpairs(data = wine %>% select(-quality), progress = F)
GGally::ggcorr(data = wine)
?corrgram
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(wine, method="color", col=col(200),
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
library(corrplot)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(wine, method="color", col=col(200),
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
library(corrplot)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(wine, method="color", col = "cor2",
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
GGally::ggcorr(data = wine)
corrplot(wine, "circle")
corrplot(wine, method = "circle")
library(corrplot)
cor <- cor(wine)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(cor, method="color", col = "cor2",
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
library(corrplot)
cor <- cor(wine)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(cor, method="color",
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
corrplot(cor, method = "circle")
corrplot(cor, method = "circle", tl.srt=45)
library(tidyverse)
library(broom)
library(GGally)
library(corrplot)
library(corrplot)
library(broom)
wine <- read_csv('/Users/bensunshine/Documents/SLU_Senior_Year/SP24/data_334/ds334blog/data/winequality-red.csv')
# GGally::ggcorr(data = wine)
# GGally::cor
# ggpairs(data = wine %>% select(-quality), progress = F)
#
#
cor_mat <- cor(wine)
corrplot(cor_mat, method = "circle", tl.srt=45)
sort(names(wine))
wine_simple <- lm(quality ~ `volatile acidity`, data = wine)
mod_age |> tidy()
wine_simple |> tidy()
wine_simple <- lm(quality ~ `volatile acidity` + alcohol + `citric acid`, data = wine)
wine_simple |> tidy()
wine_simple <- lm(quality ~ volatile acidity + alcohol + `citric acid`, data = wine)
ggpairs(data = wine, progress = F)
set.seed(1414111)
x1 <- rnorm(100, 0, 1)
x2 <- seq(-1, 1, length.out = 100)
y <- 4 + 0 * x1 + 1 * x2^2 + rnorm(100, 0, 0.1)
df <- tibble(x1 = x1, x2 = x2, y = y)
ggcorr(data = df)
df %>%
ggplot(aes(x = x1,
y = y)) +
geom_point()
df %>%
ggplot(aes(x = x2,
y = y)) +
geom_point()
wine_simple <- lm(quality ~ `volatile acidity` + alcohol + `citric acid`, data = wine)
wine_simple |> tidy()
wine
# GGally::ggcorr(data = wine)
# GGally::cor
ggpairs(data = wine, progress = F)
#
#
cor_mat <- cor(wine)
corrplot(cor_mat, method = "circle", tl.srt=45)
wine_simple <- lm(quality ~ `volatile acidity` + alcohol + `citric acid`, data = wine)
wine_int <- lm(quality ~ `volatile acidity` + alcohol + `citric acid` + alcohol:ph, data = wine)
wine_simple <- lm(quality ~ `volatile acidity` + alcohol + `citric acid`, data = wine)
wine_int <- lm(quality ~ `volatile acidity` + alcohol + `citric acid` + alcohol:pH, data = wine)
wine_simple |> tidy()
wine_int %>% tidy()
wine_simple <- lm(quality ~ `volatile acidity` + alcohol + `citric acid`, data = wine)
wine_int <- lm(quality ~ `volatile acidity` + alcohol + `citric acid` + pH + alcohol:pH, data = wine)
wine_simple |> tidy()
wine_int %>% tidy()
wine_simple <- lm(quality ~ `volatile acidity` + alcohol + `citric acid`, data = wine)
wine_int <- lm(quality ~ `volatile acidity` + alcohol + `citric acid` + `free sulfur dioxide`, data = wine)
wine_simple |> tidy()
wine_int %>% tidy()
wine_simple <- lm(quality ~ *, data = wine)
wine_simple <- lm(quality ~ "alcohol"+"chlorides"+"citric acid"+"density"+"fixed acidity"+"quality"+"residual sugar"+"sulphates" +"total sulfur dioxide"+"volatile acidity", data = wine)
wine_full <- lm(quality ~ alcohol+chlorides+`citric acid`+density+fixed acidity+quality+`residual sugar`+`sulphates` +`total sulfur dioxide`+`volatile acidity`, data = wine)
wine_full <- lm(quality ~ alcohol+chlorides+`citric acid`+density+`fixed acidity`+quality+`residual sugar`+`sulphates` +`total sulfur dioxide`+`volatile acidity`, data = wine)
wine_simple <- lm(quality ~ `volatile acidity` + alcohol + `citric acid`, data = wine)
wine_int <- lm(quality ~ `volatile acidity` + alcohol + `citric acid` + `free sulfur dioxide`, data = wine)
wine_simple |> tidy()
wine_int %>% tidy()
wine_full %>% tidy()
hist(wine$alcohol)
hist(wine$density)
hist(wine$`citric acid`)
wine_simple |> tidy()
wine_simple |> tidy()
wine_int %>% tidy()
wine_full %>% tidy()
library(modelr)
grid_simple <- wine |>
data_grid(
`volatile acidity` = seq_range(`volatile acidity`, n = 5),
alcohol = seq_range(alcohol, n = 5),
`citric acid` = seq_range(`citric acid`, n = 5)
)
grid_full <- wine |>
data_grid(
alcohol = seq_range(alcohol, n = 5),
chlorides = seq_range(chlorides, n= 5),
`citric acid` = seq_range(`citric acid`, n = 5),
density = seq_range(density, n = 5),
`fixed acidity`= seq_range(`fixed acidity`, n = 5)
# `volatile acidity` = seq_range(`volatile acidity`, n = 5),
# alcohol = seq_range(alcohol, n = 5),
)
grid_full
wine_full <- lm(quality ~ alcohol+chlorides+`citric acid`+density+`fixed acidity`+`residual sugar`+`sulphates` +`total sulfur dioxide`+`volatile acidity`, data = wine)
wine_simple <- lm(quality ~ `volatile acidity` + alcohol + `citric acid`, data = wine)
wine_int <- lm(quality ~ `volatile acidity` + alcohol + `citric acid` + `free sulfur dioxide`, data = wine)
wine_simple |> tidy()
wine_int %>% tidy()
wine_full %>% tidy()
grid_full <- wine |>
data_grid(
alcohol = seq_range(alcohol, n = 5),
chlorides = seq_range(chlorides, n= 5),
`citric acid` = seq_range(`citric acid`, n = 5),
density = seq_range(density, n = 5),
`fixed acidity`= seq_range(`fixed acidity`, n = 5),
`residual sugar` = seq_range(`residual sugar`, n = 5),
sulphates = seq_range(sulphates, n = 5),
`total sulfur dioxide`= seq_range(`total sulfur dioxide`, n = 5),
`volatile acidity` = seq_range(`volatile acidity`, n = 5)
)
aug_full <- augment(wine_full, newdata = grid_full, interval = "confidence")
aug_simple <- augment(wine_simple, newdata = grid_simple, interval = "confidence")
aug_simple
aug_full
alcohol+chlorides+`citric acid`+density+`fixed acidity`+`residual sugar`+`sulphates` +`total sulfur dioxide`+`volatile acidity
grid_full <- wine |>
data_grid(
alcohol = seq_range(alcohol, n = 2),
chlorides = seq_range(chlorides, n= 2),
`citric acid` = seq_range(`citric acid`, n = 2),
grid_full <- wine |>
data_grid(
alcohol = seq_range(alcohol, n = 2),
chlorides = seq_range(chlorides, n= 2),
`citric acid` = seq_range(`citric acid`, n = 2),
density = seq_range(density, n = 2),
`fixed acidity`= seq_range(`fixed acidity`, n = 2),
`residual sugar` = seq_range(`residual sugar`, n = 2),
sulphates = seq_range(sulphates, n = 2),
`total sulfur dioxide`= seq_range(`total sulfur dioxide`, n = 2),
`volatile acidity` = seq_range(`volatile acidity`, n = 2)
)
grid_simple <- wine |>
data_grid(
`volatile acidity` = seq_range(`volatile acidity`, n = 5),
alcohol = seq_range(alcohol, n = 5),
`citric acid` = seq_range(`citric acid`, n = 5)
)
aug_full <- augment(wine_full, newdata = grid_full, interval = "confidence")
aug_simple <- augment(wine_simple, newdata = grid_simple, interval = "confidence")
aug_full
default <- read_csv('/Users/bensunshine/Documents/SLU_Senior_Year/SP24/data_334/ds334blog/data/Loan_default.csv')
ggpairs(default)
default
ggpairs(default %>% select(-LoanID))
ggpairs(default %>% select(-LoanID), progress = F)
summary(default)
nrow(default)
view(default)
default <- read_csv('/Users/bensunshine/Documents/SLU_Senior_Year/SP24/data_334/ds334blog/data/Loan_default.csv') %>%
select(-LoanID)
default
ggpairs(default %>% select(-LoanID) %>% slice_sample(n = 10000), progress = F)
ggpairs(default %>% slice_sample(n = 10000), progress = F)
cor_mat <- cor(default)
ggpairs(default %>% slice_sample(n = 1000), progress = F)
cor_mat <- cor(default %>% select(-c('LoanID','Education', 'EmploymentType', 'MaritalStatus',
'HasMortgage', 'HasDependents', 'LoanPurpose', 'HasCoSigner')))
cor_mat <- cor(default %>% select(-c('Education', 'EmploymentType', 'MaritalStatus',
'HasMortgage', 'HasDependents', 'LoanPurpose', 'HasCoSigner')))
corrplot(cor_mat, tl.srt = 45)
default_simple_mod <- glm(Default ~ DTIRatio + InterstRate + CreditScore + Age + LoanTerm + HasMortgage + HasCoSigner, data = default)
default_simple_mod <- glm(Default ~ DTIRatio + InterestRate + CreditScore + Age + LoanTerm + HasMortgage + HasCoSigner, data = default)
default_int_mod <- glm(Default ~ Age + MaritialStatus + MartialStatus:Age + DTIRatio + CreditScore + InterestRate + LoanTerm, data = default)
default_int_mod <- glm(Default ~ Age + MaritalStatus + MaritalStatus:Age + DTIRatio + CreditScore + InterestRate + LoanTerm, data = default)
default_int_mod
default_simple_mod
sort(names(default))
default_expanded_mod
default_expanded_mod <- glm(Default ~ Age + CreditScore + DTIRatio + Income + InterestRate +
LoanTerm + HasMortgage + HasCoSigner + MaritalStatus +
MaritalStatus:Age + Income:LoanTerm + I(CreditScore^2), data = default)
default_expanded_mod
default_int_mod
grid_simple <- default |>
data_grid(
DTIRatio = seq_range(DTIRatio, n = 2),
CreditScore = seq_range(CreditScore, n= 2),
Age = seq_range(Age, n = 2),
LoanTerm = seq_range(LoanTerm, n = 2),
HasMortgage= seq_range(HasMortgage, n = 2),
HasCoSigner = seq_range(HasCoSigner, n = 2)
)
grid_simple <- default |>
data_grid(
DTIRatio = seq_range(DTIRatio, n = 2),
CreditScore = seq_range(CreditScore, n= 2),
Age = seq_range(Age, n = 2),
LoanTerm = seq_range(LoanTerm, n = 2),
HasMortgage= seq_range(HasMortgage, n = 2),
HasCoSigner = seq_range(HasCoSigner, n = 2)
)
View(default)
count(default$HasCoSigner)
default %>% count(HasCoSigner)
default %>% count(HasMortgage)
DTIRatio + InterestRate + CreditScore + Age + LoanTerm + HasMortgage + HasCoSigner
grid_simple <- default |>
data_grid(
DTIRatio = seq_range(DTIRatio, n = 2),
CreditScore = seq_range(CreditScore, n= 2),
Age = seq_range(Age, n = 2),
LoanTerm = seq_range(LoanTerm, n = 2),
HasMortgage= c("Yes", "No"),
HasCoSigner = c("Yes", "No")
)
default %>% count(MaritalStatus)
grid_int <- default |>
data_grid(
Age = seq_range(Age, n = 2),
MaritalStatus = c("Divorced", "Married", "Single"),
DTIRatio = seq_range(DTIRatio, n = 2),
CreditScore = seq_range(CreditScore, n= 2),
InterestRate = seq_range(InterestRate, n = 2),
LoanTerm = seq_range(LoanTerm, n = 2),
HasMortgage= c("Yes", "No")
)
grid_int
grid_expand <- default |>
data_grid(
Income = seq(Income, n = 5),
Age = seq_range(Age, n = 5),
MaritalStatus = c("Divorced", "Married", "Single"),
DTIRatio = seq_range(DTIRatio, n = 5),
CreditScore = seq_range(CreditScore, n= 5),
InterestRate = seq_range(InterestRate, n = 5),
LoanTerm = seq_range(LoanTerm, n = 5),
HasMortgage= c("Yes", "No"),
HasCoSigner = c("Yes", "No")
)
grid_expand <- default |>
data_grid(
Income = seq(Income, n = 5),
Age = seq_range(Age, n = 5),
MaritalStatus = c("Divorced", "Married", "Single"),
DTIRatio = seq_range(DTIRatio, n = 5),
CreditScore = seq_range(CreditScore, n= 5),
InterestRate = seq_range(InterestRate, n = 5),
LoanTerm = seq_range(LoanTerm, n = 5),
HasMortgage= c("Yes", "No"),
HasCoSigner = c("Yes", "No")
)
grid_expand <- default |>
data_grid(
Income = seq_range(Income, n = 5),
Age = seq_range(Age, n = 5),
MaritalStatus = c("Divorced", "Married", "Single"),
DTIRatio = seq_range(DTIRatio, n = 5),
CreditScore = seq_range(CreditScore, n= 5),
InterestRate = seq_range(InterestRate, n = 5),
LoanTerm = seq_range(LoanTerm, n = 5),
HasMortgage= c("Yes", "No"),
HasCoSigner = c("Yes", "No")
)
grid_simple <- default |>
data_grid(
DTIRatio = seq_range(DTIRatio, n = 5),
CreditScore = seq_range(CreditScore, n= 5),
Age = seq_range(Age, n = 5),
LoanTerm = seq_range(LoanTerm, n = 5),
HasMortgage= c("Yes", "No"),
HasCoSigner = c("Yes", "No")
)
grid_int <- default |>
data_grid(
Age = seq_range(Age, n = 5),
MaritalStatus = c("Divorced", "Married", "Single"),
DTIRatio = seq_range(DTIRatio, n = 5),
CreditScore = seq_range(CreditScore, n= 5),
InterestRate = seq_range(InterestRate, n = 5),
LoanTerm = seq_range(LoanTerm, n = 5),
HasMortgage= c("Yes", "No")
)
Age + CreditScore + DTIRatio + Income + InterestRate +
LoanTerm + HasMortgage + HasCoSigner + MaritalStatus +
MaritalStatus:Age + Income:LoanTerm + I(CreditScore^2)
grid_simple <- default |>
data_grid(
DTIRatio = seq_range(DTIRatio, n = 5),
CreditScore = seq_range(CreditScore, n= 5),
Age = seq_range(Age, n = 5),
LoanTerm = seq_range(LoanTerm, n = 5),
HasMortgage= c("Yes", "No"),
HasCoSigner = c("Yes", "No")
)
grid_int <- default |>
data_grid(
Age = seq_range(Age, n = 5),
MaritalStatus = c("Divorced", "Married", "Single"),
DTIRatio = seq_range(DTIRatio, n = 5),
CreditScore = seq_range(CreditScore, n= 5),
InterestRate = seq_range(InterestRate, n = 5),
LoanTerm = seq_range(LoanTerm, n = 5),
HasMortgage= c("Yes", "No")
)
grid_expand <- default |>
data_grid(
Income = seq_range(Income, n = 5),
Age = seq_range(Age, n = 5),
MaritalStatus = c("Divorced", "Married", "Single"),
DTIRatio = seq_range(DTIRatio, n = 5),
CreditScore = seq_range(CreditScore, n= 5),
InterestRate = seq_range(InterestRate, n = 5),
LoanTerm = seq_range(LoanTerm, n = 5),
HasMortgage= c("Yes", "No"),
HasCoSigner = c("Yes", "No")
)
aug_simple <- augment(default, newdata = grid_simple, interval = "confidence")
aug_simple <- augment(default_simple_mod, newdata = grid_simple, interval = "confidence")
grid_simple <- default |>
data_grid(
InterestRate = seq_range(InterestRate, n = 5),
DTIRatio = seq_range(DTIRatio, n = 5),
CreditScore = seq_range(CreditScore, n= 5),
Age = seq_range(Age, n = 5),
LoanTerm = seq_range(LoanTerm, n = 5),
HasMortgage= c("Yes", "No"),
HasCoSigner = c("Yes", "No")
)
grid_int <- default |>
data_grid(
Age = seq_range(Age, n = 5),
MaritalStatus = c("Divorced", "Married", "Single"),
DTIRatio = seq_range(DTIRatio, n = 5),
CreditScore = seq_range(CreditScore, n= 5),
InterestRate = seq_range(InterestRate, n = 5),
LoanTerm = seq_range(LoanTerm, n = 5),
HasMortgage= c("Yes", "No")
)
grid_expand <- default |>
data_grid(
Income = seq_range(Income, n = 5),
Age = seq_range(Age, n = 5),
MaritalStatus = c("Divorced", "Married", "Single"),
DTIRatio = seq_range(DTIRatio, n = 5),
CreditScore = seq_range(CreditScore, n= 5),
InterestRate = seq_range(InterestRate, n = 5),
LoanTerm = seq_range(LoanTerm, n = 5),
HasMortgage= c("Yes", "No"),
HasCoSigner = c("Yes", "No")
)
aug_simple <- augment(default_simple_mod, newdata = grid_simple, interval = "confidence")
aug_int <- augment(default_int_mod, newdata = grid_int, interval = "confidence")
aug_expand <- augment(default_expanded_mod, newdata = grid_expand, interval = "confidence")
aug_simple
aug_simple <- augment(default_simple_mod, newdata = grid_simple, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
aug_int <- augment(default_int_mod, newdata = grid_int, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
aug_expand <- augment(default_expanded_mod, newdata = grid_expand, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
plot_df <- bind_rows(lst(aug_simple, aug_int, aug_expand), .id = "model")
plot_df
