DTIRatio = seq_range(DTIRatio, n = 3),
CreditScore = seq_range(CreditScore, n= 3),
InterestRate = seq_range(InterestRate, n = 3),
LoanTerm = seq_range(LoanTerm, n = 3),
# HasMortgage= c("Yes", "No"),
# HasCoSigner = c("Yes", "No")
)
aug_simple <- augment(default_simple_mod, newdata = grid_simple, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
aug_int <- augment(default_int_mod, newdata = grid_int, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
aug_expand <- augment(default_expanded_mod, newdata = grid_expand, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
plot_df <- bind_rows(lst(aug_simple, aug_int, aug_expand), .id = "model")
plot_df %>%
ggplot(aes(x = Income,
y = pred_prob)) +
# geom_point(data = default, aes(x = CreditScore,
#                                y = Default),
# alpha = 0.3) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
scale_color_viridis_d() +
#facet_grid(HasCoSigner~HasMortgage) +
facet_wrap(LoanTerm~MaritalStatus) +
theme_minimal() +
labs(color = "Model",
x = "Credit Score",
y = "Predicted Probability")
plot_df %>%
ggplot(aes(x = Income,
y = pred_prob)) +
# geom_point(data = default, aes(x = CreditScore,
#                                y = Default),
# alpha = 0.3) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
scale_color_viridis_d() +
#facet_grid(HasCoSigner~HasMortgage) +
facet_wrap(MaritalStatus) +
theme_minimal() +
labs(color = "Model",
x = "Credit Score",
y = "Predicted Probability")
plot_df %>%
ggplot(aes(x = Income,
y = pred_prob)) +
# geom_point(data = default, aes(x = CreditScore,
#                                y = Default),
# alpha = 0.3) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
scale_color_viridis_d() +
#facet_grid(HasCoSigner~HasMortgage) +
facet_wrap(~MaritalStatus) +
theme_minimal() +
labs(color = "Model",
x = "Credit Score",
y = "Predicted Probability")
plot_df
plot_df %>%
ggplot(aes(x = Income,
y = pred_prob)) +
# geom_point(data = default, aes(x = CreditScore,
#                                y = Default),
# alpha = 0.3) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
scale_color_viridis_d() +
#facet_grid(HasCoSigner~HasMortgage) +
facet_wrap(InterestRate~LoanTerm~MaritalStatus) +
theme_minimal() +
labs(color = "Model",
x = "Credit Score",
y = "Predicted Probability")
ggplot(plot_df, aes(x = CreditScore, y = pred_prob, color = model)) +
geom_line() +
facet_wrap(~ model, scales = "free_y") +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob, color = Income)) +
geom_line() +
facet_wrap(~ model, scales = "free_y") +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line() +
facet_wrap(~ model, scales = "free_y") +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(~ model, scales = "free_y") +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(~ MaritalStatus, scales = "free_y") +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(~ MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(Age~ MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(LoanTerm~Age~ MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(Income~LoanTerm~Age~ MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(Income~LoanTerm~MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
aug_surv_int
default_simple_mod <- glm(Default ~ Age + DTIRatio + CreditScore + MaritalStatus, data = default)
default_int_mod <- glm(Default ~ Age  + MaritalStatus:Age + DTIRatio + CreditScore, data = default)
default_expanded_mod <- glm(Default ~ Age + CreditScore + DTIRatio + MaritalStatus +
MaritalStatus:Age  + I(CreditScore^2), data = default)
#The relationship between CreditScore and Default may be more complex than a simple linear trend. Including a quadratic term allows for flexibility in modeling this complexity.
# MaritalStatus:Age Interaction: This interaction term allows for the possibility that the relationship between Age and Default may differ for individuals with different marital statuses. For example, it's conceivable that the effect of Age on Default might be different for married individuals compared to unmarried individuals. Including this interaction term allows the model to capture such nuances in the relationship.
#
# Income:LoanTerm Interaction: This interaction term accounts for the possibility that the effect of Income on Default may vary depending on the duration of the loan (LoanTerm). It's plausible that the impact of Income on Default might be different for short-term loans compared to long-term loans. Including this interaction term allows the model to account for such variations in the relationship.
grid_simple <- default |>
data_grid(
#InterestRate = seq_range(InterestRate, n = 3),
DTIRatio = seq_range(DTIRatio, n = 3),
CreditScore = seq_range(CreditScore, n= 3),
Age = seq_range(Age, n = 3),
#LoanTerm = seq_range(LoanTerm, n = 3),
# HasMortgage= c("Yes", "No"),
# HasCoSigner = c("Yes", "No"),
MaritalStatus = c("Divorced", "Married", "Single"),
#Income = seq_range(Income, n = 3)
)
grid_int <- default |>
data_grid(
Age = seq_range(Age, n = 3),
MaritalStatus = c("Divorced", "Married", "Single"),
DTIRatio = seq_range(DTIRatio, n = 3),
CreditScore = seq_range(CreditScore, n= 3)#,
#InterestRate = seq_range(InterestRate, n = 3),
#LoanTerm = seq_range(LoanTerm, n = 3),
# HasMortgage= c("Yes", "No"),
#Income = seq_range(Income, n = 3)
)
grid_expand <- default |>
data_grid(
#Income = seq_range(Income, n = 3),
Age = seq_range(Age, n = 3),
MaritalStatus = c("Divorced", "Married", "Single"),
DTIRatio = seq_range(DTIRatio, n = 3),
CreditScore = seq_range(CreditScore, n= 3)#,
#InterestRate = seq_range(InterestRate, n = 3),
#LoanTerm = seq_range(LoanTerm, n = 3),
# HasMortgage= c("Yes", "No"),
# HasCoSigner = c("Yes", "No")
)
aug_simple <- augment(default_simple_mod, newdata = grid_simple, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
aug_int <- augment(default_int_mod, newdata = grid_int, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
aug_expand <- augment(default_expanded_mod, newdata = grid_expand, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
plot_df <- bind_rows(lst(aug_simple, aug_int, aug_expand), .id = "model")
plot_df
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(~MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(Age~MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(CreditScore~Age~MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(DTIRatio~CreditScore~Age~MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(DTIRatio~Age~MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(DTIRatio~MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
grid_simple <- default |>
data_grid(
#InterestRate = seq_range(InterestRate, n = 3),
DTIRatio = seq_range(DTIRatio, n = 2),
CreditScore = seq_range(CreditScore, n= 2),
Age = seq_range(Age, n = 2),
#LoanTerm = seq_range(LoanTerm, n = 3),
# HasMortgage= c("Yes", "No"),
# HasCoSigner = c("Yes", "No"),
MaritalStatus = c("Divorced", "Married", "Single"),
#Income = seq_range(Income, n = 3)
)
grid_int <- default |>
data_grid(
Age = seq_range(Age, n = 2),
MaritalStatus = c("Divorced", "Married", "Single"),
DTIRatio = seq_range(DTIRatio, n = 2),
CreditScore = seq_range(CreditScore, n= 2)#,
#InterestRate = seq_range(InterestRate, n = 3),
#LoanTerm = seq_range(LoanTerm, n = 3),
# HasMortgage= c("Yes", "No"),
#Income = seq_range(Income, n = 3)
)
grid_expand <- default |>
data_grid(
#Income = seq_range(Income, n = 3),
Age = seq_range(Age, n = 2),
MaritalStatus = c("Divorced", "Married", "Single"),
DTIRatio = seq_range(DTIRatio, n = 2),
CreditScore = seq_range(CreditScore, n = 2)#,
#InterestRate = seq_range(InterestRate, n = 3),
#LoanTerm = seq_range(LoanTerm, n = 3),
# HasMortgage= c("Yes", "No"),
# HasCoSigner = c("Yes", "No")
)
aug_simple <- augment(default_simple_mod, newdata = grid_simple, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
aug_int <- augment(default_int_mod, newdata = grid_int, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
aug_expand <- augment(default_expanded_mod, newdata = grid_expand, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
plot_df <- bind_rows(lst(aug_simple, aug_int, aug_expand), .id = "model")
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(DTIRatio~MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(CreditScore~DTIRatio~MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(DTIRatio~MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
grid_simple <- default |>
data_grid(
#InterestRate = seq_range(InterestRate, n = 3),
#DTIRatio = seq_range(DTIRatio, n = 2),
CreditScore = seq_range(CreditScore, n= 2),
Age = seq_range(Age, n = 2),
#LoanTerm = seq_range(LoanTerm, n = 3),
# HasMortgage= c("Yes", "No"),
# HasCoSigner = c("Yes", "No"),
MaritalStatus = c("Divorced", "Married", "Single"),
#Income = seq_range(Income, n = 3)
)
grid_int <- default |>
data_grid(
Age = seq_range(Age, n = 2),
MaritalStatus = c("Divorced", "Married", "Single"),
#DTIRatio = seq_range(DTIRatio, n = 2),
CreditScore = seq_range(CreditScore, n= 2)#,
#InterestRate = seq_range(InterestRate, n = 3),
#LoanTerm = seq_range(LoanTerm, n = 3),
# HasMortgage= c("Yes", "No"),
#Income = seq_range(Income, n = 3)
)
grid_expand <- default |>
data_grid(
#Income = seq_range(Income, n = 3),
Age = seq_range(Age, n = 2),
MaritalStatus = c("Divorced", "Married", "Single"),
#DTIRatio = seq_range(DTIRatio, n = 2),
CreditScore = seq_range(CreditScore, n = 2)#,
#InterestRate = seq_range(InterestRate, n = 3),
#LoanTerm = seq_range(LoanTerm, n = 3),
# HasMortgage= c("Yes", "No"),
# HasCoSigner = c("Yes", "No")
)
aug_simple <- augment(default_simple_mod, newdata = grid_simple, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
default_simple_mod <- glm(Default ~ Age + CreditScore + MaritalStatus, data = default)
default_int_mod <- glm(Default ~ Age  + MaritalStatus:Age + CreditScore, data = default)
default_expanded_mod <- glm(Default ~ Age + CreditScore + MaritalStatus +
MaritalStatus:Age  + I(CreditScore^2), data = default)
#The relationship between CreditScore and Default may be more complex than a simple linear trend. Including a quadratic term allows for flexibility in modeling this complexity.
# MaritalStatus:Age Interaction: This interaction term allows for the possibility that the relationship between Age and Default may differ for individuals with different marital statuses. For example, it's conceivable that the effect of Age on Default might be different for married individuals compared to unmarried individuals. Including this interaction term allows the model to capture such nuances in the relationship.
#
# Income:LoanTerm Interaction: This interaction term accounts for the possibility that the effect of Income on Default may vary depending on the duration of the loan (LoanTerm). It's plausible that the impact of Income on Default might be different for short-term loans compared to long-term loans. Including this interaction term allows the model to account for such variations in the relationship.
grid_simple <- default |>
data_grid(
#InterestRate = seq_range(InterestRate, n = 3),
#DTIRatio = seq_range(DTIRatio, n = 2),
CreditScore = seq_range(CreditScore, n= 2),
Age = seq_range(Age, n = 2),
#LoanTerm = seq_range(LoanTerm, n = 3),
# HasMortgage= c("Yes", "No"),
# HasCoSigner = c("Yes", "No"),
MaritalStatus = c("Divorced", "Married", "Single"),
#Income = seq_range(Income, n = 3)
)
grid_int <- default |>
data_grid(
Age = seq_range(Age, n = 2),
MaritalStatus = c("Divorced", "Married", "Single"),
#DTIRatio = seq_range(DTIRatio, n = 2),
CreditScore = seq_range(CreditScore, n= 2)#,
#InterestRate = seq_range(InterestRate, n = 3),
#LoanTerm = seq_range(LoanTerm, n = 3),
# HasMortgage= c("Yes", "No"),
#Income = seq_range(Income, n = 3)
)
grid_expand <- default |>
data_grid(
#Income = seq_range(Income, n = 3),
Age = seq_range(Age, n = 2),
MaritalStatus = c("Divorced", "Married", "Single"),
#DTIRatio = seq_range(DTIRatio, n = 2),
CreditScore = seq_range(CreditScore, n = 2)#,
#InterestRate = seq_range(InterestRate, n = 3),
#LoanTerm = seq_range(LoanTerm, n = 3),
# HasMortgage= c("Yes", "No"),
# HasCoSigner = c("Yes", "No")
)
aug_simple <- augment(default_simple_mod, newdata = grid_simple, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
aug_int <- augment(default_int_mod, newdata = grid_int, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
aug_expand <- augment(default_expanded_mod, newdata = grid_expand, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
plot_df <- bind_rows(lst(aug_simple, aug_int, aug_expand), .id = "model")
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(Age~MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(Age~MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default") +  # Axis labels
scale_color_viridis_d() +
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(Age~MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default",
title = "Comparing Models of Default Likelihood") +  # Axis labels
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(Age~MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default",
title = "Comparing Models of Default Likelihood") +
theme(axis.title.x = element_text(hjust = 0.5))
theme_minimal()  # Minimalistic theme
ggplot(plot_df, aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(Age~MaritalStatus) +  # Separate panels for each model
labs(x = "Credit Score", y = "Predicted Probability of Default",
title = "Comparing Models of Default Likelihood") +
theme(axis.title.x = element_text(hjust = 0.5)) +
theme_minimal()  # Minimalistic theme
model_simple <- augment(default_simple_mod, newdata = grid_simple, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
model_int <- augment(default_int_mod, newdata = grid_int, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
model_expand <- augment(default_expanded_mod, newdata = grid_expand, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
plot_df <- bind_rows(lst(aug_simple, aug_int, aug_expand), .id = "model")
ggplot(plot_df,
aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(Age~MaritalStatus) +
labs(x = "Credit Score", y = "Predicted Probability of Default",
title = "Comparing Models of Default Likelihood") +
theme(axis.title.x = element_text(hjust = 0.5)) +
theme_minimal()
model_simple <- augment(default_simple_mod, newdata = grid_simple, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
model_int <- augment(default_int_mod, newdata = grid_int, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
model_expand <- augment(default_expanded_mod, newdata = grid_expand, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
plot_df <- bind_rows(lst(aug_simple, aug_int, aug_expand), .id = "model")
plot_df
model_simple <- augment(default_simple_mod, newdata = grid_simple, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
model_int <- augment(default_int_mod, newdata = grid_int, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
model_expand <- augment(default_expanded_mod, newdata = grid_expand, interval = "confidence") %>%
mutate(pred_prob = exp(.fitted)/(1+exp(.fitted)))
plot_df <- bind_rows(lst(model_simple, model_int, model_expand), .id = "model")
ggplot(plot_df,
aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(Age~MaritalStatus) +
labs(x = "Credit Score", y = "Predicted Probability of Default",
title = "Comparing Models of Default Likelihood") +
theme(axis.title.x = element_text(hjust = 0.5)) +
theme_minimal()
default_simple_mod %>% glance()
default_int_mod %>% glance()
default_expanded_mod %>% glance()
simple <- default_simple_mod %>% glance()
interaction <- default_int_mod %>% glance()
expand <- default_expanded_mod %>% glance()
bind_rows(lst(simple, interaction, expand), .id = "model")
bind_rows(lst(simple, interaction, expand), .id = "model") %>%
arrange(desc(AIC)) %>%
mutate(AIC = as.character(AIC),
BIC = as.character(BIC))
plot(model_simple)
plot(default_simple_mod)
cor_mat
corrplot(cor_mat, tl.srt = 45)
default_simple_mod <- glm(Default ~ Age + CreditScore + MaritalStatus, data = default)
default_int_mod <- glm(Default ~ Age  + MaritalStatus+ MaritalStatus:Age + CreditScore, data = default)
default_expanded_mod <- glm(Default ~ Age + CreditScore + MaritalStatus +
MaritalStatus:Age  + I(CreditScore^2), data = default)
#The relationship between CreditScore and Default may be more complex than a simple linear trend. Including a quadratic term allows for flexibility in modeling this complexity.
# MaritalStatus:Age Interaction: This interaction term allows for the possibility that the relationship between Age and Default may differ for individuals with different marital statuses. For example, it's conceivable that the effect of Age on Default might be different for married individuals compared to unmarried individuals. Including this interaction term allows the model to capture such nuances in the relationship.
#
# Income:LoanTerm Interaction: This interaction term accounts for the possibility that the effect of Income on Default may vary depending on the duration of the loan (LoanTerm). It's plausible that the impact of Income on Default might be different for short-term loans compared to long-term loans. Including this interaction term allows the model to account for such variations in the relationship.
simple <- default_simple_mod %>% glance()
interaction <- default_int_mod %>% glance()
expand <- default_expanded_mod %>% glance()
bind_rows(lst(simple, interaction, expand), .id = "model") %>%
arrange(desc(AIC))
# %>%
#   mutate(AIC = as.character(AIC),
#          BIC = as.character(BIC))
bind_rows(lst(simple, interaction, expand), .id = "model") %>%
arrange(AIC)
ggplot(plot_df,
aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(Age~MaritalStatus) +
labs(x = "Credit Score", y = "Predicted Probability of Default",
title = "Comparing Models of Default Probability",
color = "Model") +
theme(axis.title.x = element_text(hjust = 0.5)) +
theme_minimal()
bind_rows(default_simple_mod, default_int_mod, default_expanded_mod,  .id = "model")
default_expanded_mod
default_expanded_mod <- glm(Default ~ Age + CreditScore + MaritalStatus +
MaritalStatus:Age  + I(CreditScore^2), data = default) %>% tidy()
default_expanded_mod
default_expanded_mod <- glm(Default ~ Age + CreditScore + MaritalStatus +
MaritalStatus:Age  + I(CreditScore^2), data = default)
bind_rows(default_simple_mod %>% tidy(), default_int_mod %>% tidy(), default_expanded_mod %>% tidy(),  .id = "model")
bind_rows(default_simple_mod %>% tidy(), default_int_mod %>% tidy(), default_expanded_mod %>% tidy(),  .id = "model")
exp(-3.585667e-03)
exp(-3.818573e-03)
exp(-3.818599e-03	)
exp(-3.818573e-03)
default_int_mod %>% tidy()
exp(6.530496e-04	)
exp(4.456419e-05	)
ggplot(plot_df,
aes(x = CreditScore, y = pred_prob)) +
geom_line(aes(color = as.factor(model)),
linewidth = 1.5) +
facet_wrap(Age~MaritalStatus) +
labs(x = "Credit Score", y = "Predicted Probability of Default",
title = "Comparing Models of Default Probability",
color = "Model") +
theme(axis.title.x = element_text(hjust = 0.5)) +
theme_minimal()
