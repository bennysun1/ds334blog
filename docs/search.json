[
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2\n\n\ntest"
  },
  {
    "objectID": "posts/test/index.html",
    "href": "posts/test/index.html",
    "title": "Test Post",
    "section": "",
    "text": "library(palmerpenguins)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nggplot(data = penguins, aes(x = bill_length_mm)) +\n  geom_histogram(color = \"black\", fill = \"white\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`)."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To Ben’s Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/blog_post_1/index.html#primary-visualizations",
    "href": "posts/blog_post_1/index.html#primary-visualizations",
    "title": "Blog Post 01",
    "section": "Primary Visualizations",
    "text": "Primary Visualizations\n\nteam_avg_projections %&gt;%\n  mutate(Team = fct_reorder(Team, avg_baa), .desc = T) %&gt;%\n  ggplot(aes(x = Team,\n             y = avg_baa,\n             fill = Division)) +\n  geom_col(color = \"black\") +\n  labs(y = \"Average BAA\",\n       title = \"Averag BAA Projection by Team\") +\n  theme_minimal() +\n  #scale_y_continuous(breaks = seq(0, 15, by = 2)) +\n  #scale_y_continuous(n.breaks = 10, limits = c(0.15, 0.5)) +\n  theme(plot.title = element_text(hjust = 0.5)) +\n  coord_flip()\n\n\n\nteam_avg_projections %&gt;%\n  mutate(Team = fct_reorder(Team, avg_baa), .desc = T) %&gt;%\n  ggplot(aes(x = Team,\n             y = avg_baa)) +\n  geom_col(color = \"red\", fill = \"lightblue\") +\n  labs(y = \"Average BAA\",\n       title = \"Average BAA\") +\n  theme_minimal() +\n  scale_y_continuous(breaks = seq(0, 15, by = 2)) +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.background = element_rect(size = 2),\n        panel.background = element_rect(size = 2)) +\n  facet_grid(~ Division, ) +\n  coord_flip()\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead."
  },
  {
    "objectID": "posts/blog_post_1/index.html#conclusion-and-wrap-up",
    "href": "posts/blog_post_1/index.html#conclusion-and-wrap-up",
    "title": "Blog Post 01",
    "section": "Conclusion and Wrap-Up",
    "text": "Conclusion and Wrap-Up"
  },
  {
    "objectID": "posts/blog_post_1/index.html#connection-to-class-ideas",
    "href": "posts/blog_post_1/index.html#connection-to-class-ideas",
    "title": "Blog Post 01",
    "section": "Connection to Class Ideas",
    "text": "Connection to Class Ideas"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ds334blog",
    "section": "",
    "text": "Blog Post 01\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJan 31, 2024\n\n\nBen Sunshine\n\n\n\n\n\n\n  \n\n\n\n\nTest Post\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJan 28, 2024\n\n\nBen Sunshine\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To Ben’s Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nJan 28, 2024\n\n\nBen Sunshine\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/blog_post_1/index.html",
    "href": "posts/blog_post_1/index.html",
    "title": "Blog Post 01",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "posts/blog_post_1/index.html#introduction",
    "href": "posts/blog_post_1/index.html#introduction",
    "title": "Blog Post 01",
    "section": "Introduction",
    "text": "Introduction\nIn this blog post, I am analyzing the 2024 MLB Fantasy Baseball Projections. These projections are Zeile Projections, which are baseball specific projections derived from a consensus of 7 sources including ESPN, Draft Buddy, Baseball Think Factory, Steamer Blog, Razzball, Derek Carty, and FanGraphs. This data set consists 747 observations (players) and 17 variables which include: “Player”, “Team”, “Positions”, “AB”, “R”, “HR”, “RBI”, “SB”, “AVG”, “OBP”, “H”, “2B”, , “3B”, “BB”, “SO”, “SLG”, “OPS”. This data set is hitter specific, so some of the variables I am most interested in include “HR” (Home Runs), “AVG” (Batting Average), “H” (Hits), and “OPS” (On Base Percentage Plus Slugging Percentage). Using these variables, I aim to visualize which teams will have the strongest project offenses.\n\n#projections &lt;- read_csv(\"data/FantasyPros_2024_Projections_H.csv\")\nprojections &lt;- read_csv(\"/Users/bensunshine/Documents/SLU_Senior_Year/SP24/data_334/ds334blog/data/FantasyPros_2024_Projections_H.csv\")\n\nRows: 747 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): Player, Team, Positions\ndbl (14): AB, R, HR, RBI, SB, AVG, OBP, H, 2B, 3B, BB, SO, SLG, OPS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnum_players &lt;- nrow(projections)\n\nprojections &lt;-\n  projections %&gt;%\n  mutate(Division = case_when(\n    grepl(\"(BOS|NYY|TOR|BAL|TB)\", Team) ~ \"AL EAST\",\n    grepl(\"(MIN|DET|CLE|CWS|KC)\", Team) ~ \"AL CENTRAL\",\n    grepl(\"(HOU|TEX|SEA|LAA|OAK)\", Team) ~ \"AL WEST\",\n    grepl(\"(ATL|PHI|MIA|NYM|WSH)\", Team) ~ \"NL EAST\",\n    grepl(\"(MIL|CHC|CIN|PIT|STL)\", Team) ~ \"NL CENTRAL\",\n    grepl(\"(LAD|ARI|SD|SF|COL)\", Team) ~ \"NL WEST\"\n  ))\n\ndivision_order &lt;- c(\"AL EAST\", \"AL CENTRAL\", \"AL WEST\", \"NL EAST\", \"NL CENTRAL\", \"NL WEST\", NA)\n\n\nmissing_team &lt;-\n  projections %&gt;%\n  filter(is.na(Team))\n\nteam_avg_projections &lt;- \n  projections %&gt;%\n  group_by(Division, Team) %&gt;%\n  summarise(num_player = n(),\n            avg_hr = mean(HR),\n            avg_baa = mean(AVG),\n            avg_hits = mean(H),\n            avg_obp = mean(OBP)) %&gt;%\n  mutate(Division = factor(Division, levels = division_order))\n\n`summarise()` has grouped output by 'Division'. You can override using the\n`.groups` argument."
  }
]